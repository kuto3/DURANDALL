import { useState } from 'react';
import Web3 from 'web3';
import detectEthereumProvider from '@metamask/detect-provider';
import axios from 'axios';
import { ConnectButton } from '@rainbow-me/rainbowkit';
import { useAccount } from 'wagmi';
import { useChainId } from 'wagmi';


const contractABI = [
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "initialOwner",
				"type": "address"
			},
			{
				"internalType": "string",
				"name": "_uri",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "name",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "symbol",
				"type": "string"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			}
		],
		"name": "ERC721IncorrectOwner",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "operator",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "ERC721InsufficientApproval",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "approver",
				"type": "address"
			}
		],
		"name": "ERC721InvalidApprover",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "operator",
				"type": "address"
			}
		],
		"name": "ERC721InvalidOperator",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			}
		],
		"name": "ERC721InvalidOwner",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "receiver",
				"type": "address"
			}
		],
		"name": "ERC721InvalidReceiver",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			}
		],
		"name": "ERC721InvalidSender",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "ERC721NonexistentToken",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			}
		],
		"name": "OwnableInvalidOwner",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "account",
				"type": "address"
			}
		],
		"name": "OwnableUnauthorizedAccount",
		"type": "error"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "approved",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "Approval",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "operator",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "bool",
				"name": "approved",
				"type": "bool"
			}
		],
		"name": "ApprovalForAll",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "_fromTokenId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "_toTokenId",
				"type": "uint256"
			}
		],
		"name": "BatchMetadataUpdate",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "_tokenId",
				"type": "uint256"
			}
		],
		"name": "MetadataUpdate",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "previousOwner",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "OwnershipTransferred",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "Transfer",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "addresses",
				"type": "address[]"
			}
		],
		"name": "addToWhitelist",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "approve",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "burn",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "getApproved",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "hasMinted",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "operator",
				"type": "address"
			}
		],
		"name": "isApprovedForAll",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "name",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "ownerOf",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "addresses",
				"type": "address[]"
			}
		],
		"name": "removeFromWhitelist",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "renounceOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "safeMint",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "safeTransferFrom",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "bytes",
				"name": "data",
				"type": "bytes"
			}
		],
		"name": "safeTransferFrom",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "operator",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "approved",
				"type": "bool"
			}
		],
		"name": "setApprovalForAll",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes4",
				"name": "interfaceId",
				"type": "bytes4"
			}
		],
		"name": "supportsInterface",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "symbol",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "tokenURI",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "transferFrom",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "newOwner",
				"type": "address"
			}
		],
		"name": "transferOwnership",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "whitelist",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];

const contractBytecode = '608060405234801561000f575f80fd5b5060405161313638038061313683398181016040528101906100319190610358565b838282815f9081610042919061061d565b508060019081610052919061061d565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bc91906106fb565b60405180910390fd5b6100d4816100ee60201b60201c565b5082600a90816100e4919061061d565b5050505050610714565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101eb826101c2565b9050919050565b6101fb816101e1565b8114610205575f80fd5b50565b5f81519050610216816101f2565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61026a82610224565b810181811067ffffffffffffffff8211171561028957610288610234565b5b80604052505050565b5f61029b6101b1565b90506102a78282610261565b919050565b5f67ffffffffffffffff8211156102c6576102c5610234565b5b6102cf82610224565b9050602081019050919050565b8281835e5f83830152505050565b5f6102fc6102f7846102ac565b610292565b90508281526020810184848401111561031857610317610220565b5b6103238482856102dc565b509392505050565b5f82601f83011261033f5761033e61021c565b5b815161034f8482602086016102ea565b91505092915050565b5f805f80608085870312156103705761036f6101ba565b5b5f61037d87828801610208565b945050602085015167ffffffffffffffff81111561039e5761039d6101be565b5b6103aa8782880161032b565b935050604085015167ffffffffffffffff8111156103cb576103ca6101be565b5b6103d78782880161032b565b925050606085015167ffffffffffffffff8111156103f8576103f76101be565b5b6104048782880161032b565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061045e57607f821691505b6020821081036104715761047061041a565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610498565b6104dd8683610498565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61052161051c610517846104f5565b6104fe565b6104f5565b9050919050565b5f819050919050565b61053a83610507565b61054e61054682610528565b8484546104a4565b825550505050565b5f90565b610562610556565b61056d818484610531565b505050565b5b81811015610590576105855f8261055a565b600181019050610573565b5050565b601f8211156105d5576105a681610477565b6105af84610489565b810160208510156105be578190505b6105d26105ca85610489565b830182610572565b50505b505050565b5f82821c905092915050565b5f6105f55f19846008026105da565b1980831691505092915050565b5f61060d83836105e6565b9150826002028217905092915050565b61062682610410565b67ffffffffffffffff81111561063f5761063e610234565b5b6106498254610447565b610654828285610594565b5f60209050601f831160018114610685575f8415610673578287015190505b61067d8582610602565b8655506106e4565b601f19841661069386610477565b5f5b828110156106ba57848901518255600182019150602085019450602081019050610695565b868310156106d757848901516106d3601f8916826105e6565b8355505b6001600288020188555050505b505050505050565b6106f5816101e1565b82525050565b5f60208201905061070e5f8301846106ec565b92915050565b612a15806107215f395ff3fe608060405234801561000f575f80fd5b5060043610610140575f3560e01c8063715018a6116100b6578063a14481941161007a578063a144819414610370578063a22cb4651461038c578063b88d4fde146103a8578063c87b56dd146103c4578063e985e9c5146103f4578063f2fde38b1461042457610140565b8063715018a6146102de5780637f649783146102e85780638da5cb5b1461030457806395d89b41146103225780639b19251a1461034057610140565b806338e21cce1161010857806338e21cce146101fa57806342842e0e1461022a57806342966c6814610246578063548db174146102625780636352211e1461027e57806370a08231146102ae57610140565b806301ffc9a71461014457806306fdde0314610174578063081812fc14610192578063095ea7b3146101c257806323b872dd146101de575b5f80fd5b61015e60048036038101906101599190611eaf565b610440565b60405161016b9190611ef4565b60405180910390f35b61017c610451565b6040516101899190611f7d565b60405180910390f35b6101ac60048036038101906101a79190611fd0565b6104e0565b6040516101b9919061203a565b60405180910390f35b6101dc60048036038101906101d7919061207d565b6104fb565b005b6101f860048036038101906101f391906120bb565b610511565b005b610214600480360381019061020f919061210b565b610610565b6040516102219190611ef4565b60405180910390f35b610244600480360381019061023f91906120bb565b61062d565b005b610260600480360381019061025b9190611fd0565b61064c565b005b61027c60048036038101906102779190612197565b610662565b005b61029860048036038101906102939190611fd0565b610704565b6040516102a5919061203a565b60405180910390f35b6102c860048036038101906102c3919061210b565b610715565b6040516102d591906121f1565b60405180910390f35b6102e66107cb565b005b61030260048036038101906102fd9190612197565b6107de565b005b61030c610881565b604051610319919061203a565b60405180910390f35b61032a6108a9565b6040516103379190611f7d565b60405180910390f35b61035a6004803603810190610355919061210b565b610939565b6040516103679190611ef4565b60405180910390f35b61038a6004803603810190610385919061207d565b610956565b005b6103a660048036038101906103a19190612234565b610b5e565b005b6103c260048036038101906103bd919061239a565b610b74565b005b6103de60048036038101906103d99190611fd0565b610b91565b6040516103eb9190611f7d565b60405180910390f35b61040e6004803603810190610409919061241a565b610ba3565b60405161041b9190611ef4565b60405180910390f35b61043e6004803603810190610439919061210b565b610c31565b005b5f61044a82610cb5565b9050919050565b60605f805461045f90612485565b80601f016020809104026020016040519081016040528092919081815260200182805461048b90612485565b80156104d65780601f106104ad576101008083540402835291602001916104d6565b820191905f5260205f20905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b5f6104ea82610d15565b506104f482610d9b565b9050919050565b61050d8282610508610dd4565b610ddb565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610581575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610578919061203a565b60405180910390fd5b5f610594838361058f610dd4565b610ded565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461060a578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610601939291906124b5565b60405180910390fd5b50505050565b6009602052805f5260405f205f915054906101000a900460ff1681565b61064783838360405180602001604052805f815250610b74565b505050565b61065e5f82610659610dd4565b610ded565b5050565b61066a610ff8565b5f5b828290508110156106ff575f60085f85858581811061068e5761068d6124ea565b5b90506020020160208101906106a3919061210b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550808060010191505061066c565b505050565b5f61070e82610d15565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610786575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161077d919061203a565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107d3610ff8565b6107dc5f61107f565b565b6107e6610ff8565b5f5b8282905081101561087c57600160085f85858581811061080b5761080a6124ea565b5b9050602002016020810190610820919061210b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555080806001019150506107e8565b505050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108b890612485565b80601f01602080910402602001604051908101604052809291908181526020018280546108e490612485565b801561092f5780601f106109065761010080835404028352916020019161092f565b820191905f5260205f20905b81548152906001019060200180831161091257829003601f168201915b5050505050905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690612561565b60405180910390fd5b60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a60906125c9565b60405180910390fd5b610a738282611142565b610b0581600a8054610a8490612485565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab090612485565b8015610afb5780601f10610ad257610100808354040283529160200191610afb565b820191905f5260205f20905b815481529060010190602001808311610ade57829003601f168201915b505050505061115f565b600160095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b610b70610b69610dd4565b83836111b9565b5050565b610b7f848484610511565b610b8b84848484611322565b50505050565b6060610b9c826114d4565b9050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610c39610ff8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca9575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ca0919061203a565b60405180910390fd5b610cb28161107f565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d0e5750610d0d826115df565b5b9050919050565b5f80610d20836116c0565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d9257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d8991906121f1565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610de883838360016116f9565b505050565b5f80610df8846116c0565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e3957610e388184866118b8565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec457610e785f855f806116f9565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f4357600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b611000610dd4565b73ffffffffffffffffffffffffffffffffffffffff1661101e610881565b73ffffffffffffffffffffffffffffffffffffffff161461107d57611041610dd4565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611074919061203a565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61115b828260405180602001604052805f81525061197b565b5050565b8060065f8481526020019081526020015f20908161117d9190612784565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111ad91906121f1565b60405180910390a15050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361122957816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611220919061203a565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113159190611ef4565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156114ce578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611365610dd4565b8685856040518563ffffffff1660e01b815260040161138794939291906128a5565b6020604051808303815f875af19250505080156113c257506040513d601f19601f820116820180604052508101906113bf9190612903565b60015b611443573d805f81146113f0576040519150601f19603f3d011682016040523d82523d5f602084013e6113f5565b606091505b505f81510361143b57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611432919061203a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114cc57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114c3919061203a565b60405180910390fd5b505b50505050565b60606114df82610d15565b505f60065f8481526020019081526020015f2080546114fd90612485565b80601f016020809104026020016040519081016040528092919081815260200182805461152990612485565b80156115745780601f1061154b57610100808354040283529160200191611574565b820191905f5260205f20905b81548152906001019060200180831161155757829003601f168201915b505050505090505f611584611996565b90505f8151036115985781925050506115da565b5f825111156115cc5780826040516020016115b4929190612968565b604051602081830303815290604052925050506115da565b6115d5846119ac565b925050505b919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806116a957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806116b957506116b882611a12565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061173157505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611863575f61174084610d15565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117aa57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117bd57506117bb8184610ba3565b155b156117ff57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117f6919061203a565b60405180910390fd5b811561186157838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118c3838383611a7b565b611976575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361193757806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161192e91906121f1565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161196d92919061298b565b60405180910390fd5b505050565b6119858383611b3b565b6119915f848484611322565b505050565b606060405180602001604052805f815250905090565b60606119b782610d15565b505f6119c1611996565b90505f8151116119df5760405180602001604052805f815250611a0a565b806119e984611c2e565b6040516020016119fa929190612968565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b3257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611af35750611af28484610ba3565b5b80611b3157508273ffffffffffffffffffffffffffffffffffffffff16611b1983610d9b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bab575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ba2919061203a565b60405180910390fd5b5f611bb783835f610ded565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611c29575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611c20919061203a565b60405180910390fd5b505050565b60605f6001611c3c84611cf8565b0190505f8167ffffffffffffffff811115611c5a57611c59612276565b5b6040519080825280601f01601f191660200182016040528015611c8c5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611ced578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611ce257611ce16129b2565b5b0494505f8503611c99575b819350505050919050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611d54577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611d4a57611d496129b2565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611d91576d04ee2d6d415b85acef81000000008381611d8757611d866129b2565b5b0492506020810190505b662386f26fc100008310611dc057662386f26fc100008381611db657611db56129b2565b5b0492506010810190505b6305f5e1008310611de9576305f5e1008381611ddf57611dde6129b2565b5b0492506008810190505b6127108310611e0e576127108381611e0457611e036129b2565b5b0492506004810190505b60648310611e315760648381611e2757611e266129b2565b5b0492506002810190505b600a8310611e40576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e8e81611e5a565b8114611e98575f80fd5b50565b5f81359050611ea981611e85565b92915050565b5f60208284031215611ec457611ec3611e52565b5b5f611ed184828501611e9b565b91505092915050565b5f8115159050919050565b611eee81611eda565b82525050565b5f602082019050611f075f830184611ee5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f4f82611f0d565b611f598185611f17565b9350611f69818560208601611f27565b611f7281611f35565b840191505092915050565b5f6020820190508181035f830152611f958184611f45565b905092915050565b5f819050919050565b611faf81611f9d565b8114611fb9575f80fd5b50565b5f81359050611fca81611fa6565b92915050565b5f60208284031215611fe557611fe4611e52565b5b5f611ff284828501611fbc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61202482611ffb565b9050919050565b6120348161201a565b82525050565b5f60208201905061204d5f83018461202b565b92915050565b61205c8161201a565b8114612066575f80fd5b50565b5f8135905061207781612053565b92915050565b5f806040838503121561209357612092611e52565b5b5f6120a085828601612069565b92505060206120b185828601611fbc565b9150509250929050565b5f805f606084860312156120d2576120d1611e52565b5b5f6120df86828701612069565b93505060206120f086828701612069565b925050604061210186828701611fbc565b9150509250925092565b5f602082840312156121205761211f611e52565b5b5f61212d84828501612069565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261215757612156612136565b5b8235905067ffffffffffffffff8111156121745761217361213a565b5b6020830191508360208202830111156121905761218f61213e565b5b9250929050565b5f80602083850312156121ad576121ac611e52565b5b5f83013567ffffffffffffffff8111156121ca576121c9611e56565b5b6121d685828601612142565b92509250509250929050565b6121eb81611f9d565b82525050565b5f6020820190506122045f8301846121e2565b92915050565b61221381611eda565b811461221d575f80fd5b50565b5f8135905061222e8161220a565b92915050565b5f806040838503121561224a57612249611e52565b5b5f61225785828601612069565b925050602061226885828601612220565b9150509250929050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6122ac82611f35565b810181811067ffffffffffffffff821117156122cb576122ca612276565b5b80604052505050565b5f6122dd611e49565b90506122e982826122a3565b919050565b5f67ffffffffffffffff82111561230857612307612276565b5b61231182611f35565b9050602081019050919050565b828183375f83830152505050565b5f61233e612339846122ee565b6122d4565b90508281526020810184848401111561235a57612359612272565b5b61236584828561231e565b509392505050565b5f82601f83011261238157612380612136565b5b813561239184826020860161232c565b91505092915050565b5f805f80608085870312156123b2576123b1611e52565b5b5f6123bf87828801612069565b94505060206123d087828801612069565b93505060406123e187828801611fbc565b925050606085013567ffffffffffffffff81111561240257612401611e56565b5b61240e8782880161236d565b91505092959194509250565b5f80604083850312156124305761242f611e52565b5b5f61243d85828601612069565b925050602061244e85828601612069565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061249c57607f821691505b6020821081036124af576124ae612458565b5b50919050565b5f6060820190506124c85f83018661202b565b6124d560208301856121e2565b6124e2604083018461202b565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f41646472657373206e6f742077686974656c69737465640000000000000000005f82015250565b5f61254b601783611f17565b915061255682612517565b602082019050919050565b5f6020820190508181035f8301526125788161253f565b9050919050565b7f416464726573732068617320616c7265616479206d696e7465640000000000005f82015250565b5f6125b3601a83611f17565b91506125be8261257f565b602082019050919050565b5f6020820190508181035f8301526125e0816125a7565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612608565b61264d8683612608565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61268861268361267e84611f9d565b612665565b611f9d565b9050919050565b5f819050919050565b6126a18361266e565b6126b56126ad8261268f565b848454612614565b825550505050565b5f90565b6126c96126bd565b6126d4818484612698565b505050565b5b818110156126f7576126ec5f826126c1565b6001810190506126da565b5050565b601f82111561273c5761270d816125e7565b612716846125f9565b81016020851015612725578190505b612739612731856125f9565b8301826126d9565b50505b505050565b5f82821c905092915050565b5f61275c5f1984600802612741565b1980831691505092915050565b5f612774838361274d565b9150826002028217905092915050565b61278d82611f0d565b67ffffffffffffffff8111156127a6576127a5612276565b5b6127b08254612485565b6127bb8282856126fb565b5f60209050601f8311600181146127ec575f84156127da578287015190505b6127e48582612769565b86555061284b565b601f1984166127fa866125e7565b5f5b82811015612821578489015182556001820191506020850194506020810190506127fc565b8683101561283e578489015161283a601f89168261274d565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f61287782612853565b612881818561285d565b9350612891818560208601611f27565b61289a81611f35565b840191505092915050565b5f6080820190506128b85f83018761202b565b6128c5602083018661202b565b6128d260408301856121e2565b81810360608301526128e4818461286d565b905095945050505050565b5f815190506128fd81611e85565b92915050565b5f6020828403121561291857612917611e52565b5b5f612925848285016128ef565b91505092915050565b5f81905092915050565b5f61294282611f0d565b61294c818561292e565b935061295c818560208601611f27565b80840191505092915050565b5f6129738285612938565b915061297f8284612938565b91508190509392505050565b5f60408201905061299e5f83018561202b565b6129ab60208301846121e2565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212209e6d4adc459b5a0b37ca8f64363663e354f97218302ba4ca9dc00f5af1b63e2f64736f6c634300081a0033'; // Bytecode



export default function PublishDiploma() {
	const [title, setTitle] = useState('');
	const [description, setDescription] = useState('');
	const [name, setName] = useState('');
	const [symbol, setSymbol] = useState('');
	const [imageforPresentation, setImageforPresentation] = useState('');
	const [status, setStatus] = useState('');
	const [minting, setMinting] = useState(false);
	const [success, setSuccess] = useState('');
	const [error, setError] = useState('');
	const [ipfsUri, setIpfsUri] = useState('');
	const [image, setImage] = useState<File | null>(null);
	const { address } = useAccount();
	const chainId = useChainId();

	const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
	  if (e.target.files && e.target.files.length > 0) {
		setImage(e.target.files[0]);
	  } else {
		setImage(null);
	  }
	};
  
	const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {
	  e.preventDefault();
	  setMinting(true);
	  setError('');
  
	  const formData = new FormData();
	  if (image) {
		formData.append('image', image);
	  }
	  formData.append('name', title);
	  formData.append('description', description);
  
	  try {
		const response = await axios.post('/api/servertest', formData, {
		  headers: {
			'Content-Type': 'multipart/form-data',
		  },
		});
  
		const metadataUrl = response.data.metadataUrl;
		const imageurl = response.data.imageIpfsUri; // Fix here
		setIpfsUri(imageurl);
		console.log("premiere etape" + imageurl);
		await deployContract(metadataUrl, imageurl);
	  } catch (err) {
		setError('An error occurred while publishing metadata or minting NFT.');
		console.error(err);
	  } finally {
		setMinting(false);
	  }
	};
  
	const deployContract = async (uri: string, imageurl: string) => {
	  if (!address) {
		setError('Please connect your MetaMask wallet.');
		return;
	  }
	  console.log("deuxieme etape" + imageurl);
	  setStatus('Deploying contract...');
	  try {
		const provider = await detectEthereumProvider();
		if (!provider) {
		  alert('Please install MetaMask.');
		  return;
		}
  
		const web3 = new Web3(window.ethereum);
		const contract = new web3.eth.Contract(contractABI); // Assuming you have the ABI
		const deployTx = contract.deploy({
		  data: contractBytecode, // Assuming you have the bytecode
		  arguments: [address, uri, name, symbol],
		});
  
		const gasEstimate = await deployTx.estimateGas({ from: address });
		const deployedContract = await deployTx.send({
		  from: address,
		  gas: gasEstimate.toString(),
		});
  
		const contractAddress = deployedContract.options.address;
		setStatus(`Contract deployed at address: ${contractAddress}`);
		await handleBackendSubmit(contractAddress, address, uri);
		setSuccess('Diploma published successfully!');
		resetForm();
	  } catch (err) {
		console.error('Error deploying contract:', err);
		setError('Failed to deploy contract.');
	  }
	};

	 function getNetworkByChainId(chainId: any) {
		let network;
	  
		switch (chainId) {
		  case 1:
			network = 'Ethereum Mainnet Network ';
			break;
		  case 137:
			network = 'Polygon Network';
			break;
		  case 11155111:
			network = 'Sepolia Network';
			break;
		  case 42161:
			network = 'Arbitrum Network';
			break;
		  case 8453:
			network = 'Base Network';
			break;
		  default:
			network = 'Unknown Network';
			break;
		}
	  
		return network;
	  }
  
	const handleBackendSubmit = async (contractAddress: string | undefined, address: string, uri: string) => {
	  console.log("troisieme etape" + uri);
	  const data = {
		title,
		description,
		ipfsUri: uri,
		ethAddress: contractAddress,
		ethAddress2: address,
		image: uri,
		network: getNetworkByChainId(chainId),
	  };
  
	  try {
		const response = await axios.post('/api/testing', data, {
		  headers: { 'Content-Type': 'application/json' },
		});
  
		if (response.status === 201) {
		  setSuccess('Diploma published successfully!');
		}
	  } catch (err) {
		console.error('Error publishing diploma:', err);
		setError('Failed to publish diploma.');
	  }
	};
  
	const resetForm = () => {
	  setTitle('');
	  setDescription('');
	  setName('');
	  setSymbol('');
	  setImage(null);
	  setError('');
	};

  return (
    <div className="max-w-xl mx-auto mt-10 p-6 bg-neutral-800 rounded-lg shadow-lg border-4 text-white border-neutral-700 mb-9">
      <h1 className="text-2xl font-bold ">PUBLISH A NEW CERTIFICATE CONTRACT</h1>
	  <div className='flex mt-3'>	 <ConnectButton accountStatus="avatar" /><p className='text-gray-500 ml-2'>Put the Network that you want</p></div>
		<h2 className='mt-3 text-gray-500'>The current network : <span className='font-bold text-gray-400'>{getNetworkByChainId(chainId)}</span></h2>
      <form>
        <div className="mb-4 mt-4">
          <label htmlFor="title" className="block font-bold mb-2">
            TITLE OF THE CERTIFICATES
          </label>
		 
          <input
            type="text"
            id="title"
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:outline-none text-black"
            placeholder="Enter the diploma title"
            required
          />
        </div>

        <div className="mb-4">
          <label htmlFor="description" className="block font-bold mb-2">
            DESCRIPTION OF THE CERTIFICATES
          </label>
          <textarea
            id="description"
            value={description}
            onChange={(e) => setDescription(e.target.value)}
            className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:outline-none text-black"
            placeholder="Enter the diploma description"
            required
          />
        </div>

        <div className="mb-4">
          <label htmlFor="name" className="block font-bold mb-2">
            NAME OF THE CERTIFICATES COLLECTION
          </label>
          <input
            type="text"
            id="name"
            value={name}
            onChange={(e) => setName(e.target.value)}
            className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:outline-none text-black"
            placeholder="Enter the collection name"
            required
          />
        </div>

        <div className="mb-4">
          <label htmlFor="symbol" className="block font-bold mb-2">
            SYMBOL OF THE CERTIFICATES COLLECTION
          </label>
          <input
            type="text"
            id="symbol"
            value={symbol}
            onChange={(e) => setSymbol(e.target.value)}
            className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:outline-none text-black"
            placeholder="Enter the collection symbol"
            required
          />
        </div>

        <div className="mb-4">
          <label htmlFor="image" className="block font-bold mb-2">
            IMAGE OF THE CERTIFICATES
          </label>
          <input
            type="file"
            onChange={handleImageChange}
            className="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring focus:border-blue-700 text-black bg-white"
          />
        </div>

        <div className="flex justify-end">
          <button
            type="button"
            onClick={handleSubmit}
            disabled={minting}
            className={`w-full ${minting ? 'bg-neutral-600' : 'bg-neutral-700'} text-white font-bold py-2 px-4 rounded-md shadow-md hover:bg-neutral-600 transition duration-300 mt-2`}
          >
            {minting ? 'Publishing...' : 'Publish Diploma'}
          </button>
        </div>
      </form>

      {status && <p className="mt-4 text-center text-gray-700">{status}</p>}
      {success && <p className="mt-4 text-center text-green-600">{success}</p>}
      {error && <p className="mt-4 text-center text-red-600">{error}</p>}
	
    </div>
  );
}
